{
  "{\"sourceRoot\":\"C:\\\\workspace\\\\todo-list-server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\workspace\\\\todo-list-server\",\"filename\":\"C:\\\\workspace\\\\todo-list-server\\\\app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\workspace\\\\todo-list-server\",\"plugins\":[],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\workspace\\todo-list-server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\workspace\\todo-list-server",
      "filename": "C:\\workspace\\todo-list-server\\app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\workspace\\todo-list-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\workspace\\todo-list-server\\app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\workspace\\todo-list-server\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\workspace\\todo-list-server\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport titleRouter from './routes/todos';\nconst app = express();\napp.set('view engine', 'ejs');\napp.use('/todos', titleRouter);\napp.listen(5000, () => {\n  console.log(\"Server started on Part 5000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwidGl0bGVSb3V0ZXIiLCJhcHAiLCJzZXQiLCJ1c2UiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLE1BQW9CLFNBQXBCO0FBQ0EsT0FBT0MsV0FBUCxNQUF3QixnQkFBeEI7QUFFQSxNQUFNQyxHQUFHLEdBQUdGLE9BQU8sRUFBbkI7QUFFQUUsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUVBRCxHQUFHLENBQUNFLEdBQUosQ0FBUSxRQUFSLEVBQWlCSCxXQUFqQjtBQUVBQyxHQUFHLENBQUNHLE1BQUosQ0FBVyxJQUFYLEVBQWlCLE1BQU07QUFDbkJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDZCQUFaO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiJDOlxcd29ya3NwYWNlXFx0b2RvLWxpc3Qtc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IHRpdGxlUm91dGVyIGZyb20gJy4vcm91dGVzL3RvZG9zJ1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XHJcblxyXG5hcHAudXNlKCcvdG9kb3MnLHRpdGxlUm91dGVyKTtcclxuXHJcbmFwcC5saXN0ZW4oNTAwMCwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJTZXJ2ZXIgc3RhcnRlZCBvbiBQYXJ0IDUwMDBcIik7XHJcbn0pXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "titleRouter",
        "app",
        "set",
        "use",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;AAEAE,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAD,GAAG,CAACE,GAAJ,CAAQ,QAAR,EAAiBH,WAAjB;AAEAC,GAAG,CAACG,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,CAFD",
      "sourceRoot": "C:\\workspace\\todo-list-server\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport titleRouter from './routes/todos'\r\n\r\nconst app = express();\r\n\r\napp.set('view engine', 'ejs');\r\n\r\napp.use('/todos',titleRouter);\r\n\r\napp.listen(5000, () => {\r\n    console.log(\"Server started on Part 5000\");\r\n})\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1597221820774
  },
  "{\"sourceRoot\":\"C:\\\\workspace\\\\todo-list-server\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\workspace\\\\todo-list-server\",\"filename\":\"C:\\\\workspace\\\\todo-list-server\\\\routes\\\\todos.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\workspace\\\\todo-list-server\",\"plugins\":[],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\workspace\\todo-list-server\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\workspace\\todo-list-server",
      "filename": "C:\\workspace\\todo-list-server\\routes\\todos.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\workspace\\todo-list-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\workspace\\todo-list-server\\routes\\todos.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\workspace\\todo-list-server\\routes\\todos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\workspace\\todo-list-server\\routes\\",
        "sourceFileName": "todos.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nvar db = require('../database'); // another routes also appear here\n// this script to fetch data from MySQL databse table\n\n\nrouter.get('/title-list', function (req, res, next) {\n  var sql = 'SELECT * FROM listitem';\n  db.query(sql, function (err, data, fields) {\n    if (err) throw err;\n    res.render('title-list', {\n      title: 'Title List',\n      userData: data\n    });\n  });\n});\nrouter.get('/delete/:id', function (req, res, next) {\n  var id = req.params.id;\n  var sql = 'DELETE FROM listitem WHERE id = ?';\n  db.query(sql, [id], function (err, data) {\n    if (err) throw err;\n    console.log(data.affectedRows + \" record(s) updated\");\n  });\n  res.redirect('/todos/title-list');\n});\nrouter.get('/edit/:id', function (req, res, next) {\n  var UserId = req.params.id;\n  var sql = `SELECT * FROM listitem WHERE id=${UserId}`;\n  db.query(sql, function (err, data) {\n    if (err) throw err;\n    res.render('todos', {\n      title: 'Title List',\n      editData: data[0]\n    });\n  });\n});\nrouter.post('/edit/:id', function (req, res, next) {\n  var id = req.params.id;\n  var updateData = req.body;\n  var sql = `UPDATE users SET ? WHERE id= ?`;\n  db.query(sql, [updateData, id], function (err, data) {\n    if (err) throw err;\n    console.log(data.affectedRows + \" record(s) updated\");\n  });\n  res.redirect('/todos/title-list');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG9zLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZGIiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic3FsIiwicXVlcnkiLCJlcnIiLCJkYXRhIiwiZmllbGRzIiwicmVuZGVyIiwidGl0bGUiLCJ1c2VyRGF0YSIsImlkIiwicGFyYW1zIiwiY29uc29sZSIsImxvZyIsImFmZmVjdGVkUm93cyIsInJlZGlyZWN0IiwiVXNlcklkIiwiZWRpdERhdGEiLCJwb3N0IiwidXBkYXRlRGF0YSIsImJvZHkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7O0FBRUEsSUFBSUMsRUFBRSxHQUFDSCxPQUFPLENBQUMsYUFBRCxDQUFkLEMsQ0FDQTtBQUVBOzs7QUFDQUMsTUFBTSxDQUFDRyxHQUFQLENBQVcsYUFBWCxFQUEwQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQy9DLE1BQUlDLEdBQUcsR0FBQyx3QkFBUjtBQUNBTCxFQUFBQSxFQUFFLENBQUNNLEtBQUgsQ0FBU0QsR0FBVCxFQUFjLFVBQVVFLEdBQVYsRUFBZUMsSUFBZixFQUFxQkMsTUFBckIsRUFBNkI7QUFDM0MsUUFBSUYsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVEosSUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsWUFBWCxFQUF5QjtBQUFFQyxNQUFBQSxLQUFLLEVBQUUsWUFBVDtBQUF1QkMsTUFBQUEsUUFBUSxFQUFFSjtBQUFqQyxLQUF6QjtBQUNELEdBSEM7QUFJSCxDQU5EO0FBUUFWLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLGFBQVgsRUFBMEIsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUMvQyxNQUFJUyxFQUFFLEdBQUVYLEdBQUcsQ0FBQ1ksTUFBSixDQUFXRCxFQUFuQjtBQUNFLE1BQUlSLEdBQUcsR0FBRyxtQ0FBVjtBQUNBTCxFQUFBQSxFQUFFLENBQUNNLEtBQUgsQ0FBU0QsR0FBVCxFQUFjLENBQUNRLEVBQUQsQ0FBZCxFQUFvQixVQUFVTixHQUFWLEVBQWVDLElBQWYsRUFBcUI7QUFDekMsUUFBSUQsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVFEsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlSLElBQUksQ0FBQ1MsWUFBTCxHQUFvQixvQkFBaEM7QUFDRCxHQUhDO0FBSUZkLEVBQUFBLEdBQUcsQ0FBQ2UsUUFBSixDQUFhLG1CQUFiO0FBRUgsQ0FURDtBQVdBcEIsTUFBTSxDQUFDRyxHQUFQLENBQVcsV0FBWCxFQUF3QixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQzdDLE1BQUllLE1BQU0sR0FBRWpCLEdBQUcsQ0FBQ1ksTUFBSixDQUFXRCxFQUF2QjtBQUNBLE1BQUlSLEdBQUcsR0FBRSxtQ0FBa0NjLE1BQU8sRUFBbEQ7QUFDQW5CLEVBQUFBLEVBQUUsQ0FBQ00sS0FBSCxDQUFTRCxHQUFULEVBQWMsVUFBVUUsR0FBVixFQUFlQyxJQUFmLEVBQXFCO0FBQ2pDLFFBQUlELEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBRVRKLElBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXLE9BQVgsRUFBb0I7QUFBRUMsTUFBQUEsS0FBSyxFQUFFLFlBQVQ7QUFBdUJTLE1BQUFBLFFBQVEsRUFBRVosSUFBSSxDQUFDLENBQUQ7QUFBckMsS0FBcEI7QUFDRCxHQUpEO0FBS0gsQ0FSRDtBQVVBVixNQUFNLENBQUN1QixJQUFQLENBQVksV0FBWixFQUF5QixVQUFTbkIsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUM5QyxNQUFJUyxFQUFFLEdBQUVYLEdBQUcsQ0FBQ1ksTUFBSixDQUFXRCxFQUFuQjtBQUNBLE1BQUlTLFVBQVUsR0FBQ3BCLEdBQUcsQ0FBQ3FCLElBQW5CO0FBQ0EsTUFBSWxCLEdBQUcsR0FBSSxnQ0FBWDtBQUNBTCxFQUFBQSxFQUFFLENBQUNNLEtBQUgsQ0FBU0QsR0FBVCxFQUFjLENBQUNpQixVQUFELEVBQWFULEVBQWIsQ0FBZCxFQUFnQyxVQUFVTixHQUFWLEVBQWVDLElBQWYsRUFBcUI7QUFDckQsUUFBSUQsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVFEsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlSLElBQUksQ0FBQ1MsWUFBTCxHQUFvQixvQkFBaEM7QUFDQyxHQUhEO0FBSUFkLEVBQUFBLEdBQUcsQ0FBQ2UsUUFBSixDQUFhLG1CQUFiO0FBQ0gsQ0FURDtBQVdBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUIzQixNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcd29ya3NwYWNlXFx0b2RvLWxpc3Qtc2VydmVyXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbnZhciBkYj1yZXF1aXJlKCcuLi9kYXRhYmFzZScpO1xyXG4vLyBhbm90aGVyIHJvdXRlcyBhbHNvIGFwcGVhciBoZXJlXHJcblxyXG4vLyB0aGlzIHNjcmlwdCB0byBmZXRjaCBkYXRhIGZyb20gTXlTUUwgZGF0YWJzZSB0YWJsZVxyXG5yb3V0ZXIuZ2V0KCcvdGl0bGUtbGlzdCcsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICB2YXIgc3FsPSdTRUxFQ1QgKiBGUk9NIGxpc3RpdGVtJztcclxuICAgIGRiLnF1ZXJ5KHNxbCwgZnVuY3Rpb24gKGVyciwgZGF0YSwgZmllbGRzKSB7XHJcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XHJcbiAgICByZXMucmVuZGVyKCd0aXRsZS1saXN0JywgeyB0aXRsZTogJ1RpdGxlIExpc3QnLCB1c2VyRGF0YTogZGF0YX0pO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbnJvdXRlci5nZXQoJy9kZWxldGUvOmlkJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICAgIHZhciBpZD0gcmVxLnBhcmFtcy5pZDtcclxuICAgICAgdmFyIHNxbCA9ICdERUxFVEUgRlJPTSBsaXN0aXRlbSBXSEVSRSBpZCA9ID8nO1xyXG4gICAgICBkYi5xdWVyeShzcWwsIFtpZF0sIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcclxuICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xyXG4gICAgICBjb25zb2xlLmxvZyhkYXRhLmFmZmVjdGVkUm93cyArIFwiIHJlY29yZChzKSB1cGRhdGVkXCIpO1xyXG4gICAgfSk7XHJcbiAgICByZXMucmVkaXJlY3QoJy90b2Rvcy90aXRsZS1saXN0Jyk7XHJcbiAgICBcclxufSk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvZWRpdC86aWQnLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgdmFyIFVzZXJJZD0gcmVxLnBhcmFtcy5pZDtcclxuICAgIHZhciBzcWw9YFNFTEVDVCAqIEZST00gbGlzdGl0ZW0gV0hFUkUgaWQ9JHtVc2VySWR9YDtcclxuICAgIGRiLnF1ZXJ5KHNxbCwgZnVuY3Rpb24gKGVyciwgZGF0YSkge1xyXG4gICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XHJcbiAgICAgXHJcbiAgICAgIHJlcy5yZW5kZXIoJ3RvZG9zJywgeyB0aXRsZTogJ1RpdGxlIExpc3QnLCBlZGl0RGF0YTogZGF0YVswXX0pO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxucm91dGVyLnBvc3QoJy9lZGl0LzppZCcsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICB2YXIgaWQ9IHJlcS5wYXJhbXMuaWQ7XHJcbiAgICB2YXIgdXBkYXRlRGF0YT1yZXEuYm9keTtcclxuICAgIHZhciBzcWwgPSBgVVBEQVRFIHVzZXJzIFNFVCA/IFdIRVJFIGlkPSA/YDtcclxuICAgIGRiLnF1ZXJ5KHNxbCwgW3VwZGF0ZURhdGEsIGlkXSwgZnVuY3Rpb24gKGVyciwgZGF0YSkge1xyXG4gICAgaWYgKGVycikgdGhyb3cgZXJyO1xyXG4gICAgY29uc29sZS5sb2coZGF0YS5hZmZlY3RlZFJvd3MgKyBcIiByZWNvcmQocykgdXBkYXRlZFwiKTtcclxuICAgIH0pO1xyXG4gICAgcmVzLnJlZGlyZWN0KCcvdG9kb3MvdGl0bGUtbGlzdCcpO1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "todos.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "db",
        "get",
        "req",
        "res",
        "next",
        "sql",
        "query",
        "err",
        "data",
        "fields",
        "render",
        "title",
        "userData",
        "id",
        "params",
        "console",
        "log",
        "affectedRows",
        "redirect",
        "UserId",
        "editData",
        "post",
        "updateData",
        "body",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AAEA,IAAIC,EAAE,GAACH,OAAO,CAAC,aAAD,CAAd,C,CACA;AAEA;;;AACAC,MAAM,CAACG,GAAP,CAAW,aAAX,EAA0B,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/C,MAAIC,GAAG,GAAC,wBAAR;AACAL,EAAAA,EAAE,CAACM,KAAH,CAASD,GAAT,EAAc,UAAUE,GAAV,EAAeC,IAAf,EAAqBC,MAArB,EAA6B;AAC3C,QAAIF,GAAJ,EAAS,MAAMA,GAAN;AACTJ,IAAAA,GAAG,CAACO,MAAJ,CAAW,YAAX,EAAyB;AAAEC,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,QAAQ,EAAEJ;AAAjC,KAAzB;AACD,GAHC;AAIH,CAND;AAQAV,MAAM,CAACG,GAAP,CAAW,aAAX,EAA0B,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/C,MAAIS,EAAE,GAAEX,GAAG,CAACY,MAAJ,CAAWD,EAAnB;AACE,MAAIR,GAAG,GAAG,mCAAV;AACAL,EAAAA,EAAE,CAACM,KAAH,CAASD,GAAT,EAAc,CAACQ,EAAD,CAAd,EAAoB,UAAUN,GAAV,EAAeC,IAAf,EAAqB;AACzC,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACTQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACS,YAAL,GAAoB,oBAAhC;AACD,GAHC;AAIFd,EAAAA,GAAG,CAACe,QAAJ,CAAa,mBAAb;AAEH,CATD;AAWApB,MAAM,CAACG,GAAP,CAAW,WAAX,EAAwB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7C,MAAIe,MAAM,GAAEjB,GAAG,CAACY,MAAJ,CAAWD,EAAvB;AACA,MAAIR,GAAG,GAAE,mCAAkCc,MAAO,EAAlD;AACAnB,EAAAA,EAAE,CAACM,KAAH,CAASD,GAAT,EAAc,UAAUE,GAAV,EAAeC,IAAf,EAAqB;AACjC,QAAID,GAAJ,EAAS,MAAMA,GAAN;AAETJ,IAAAA,GAAG,CAACO,MAAJ,CAAW,OAAX,EAAoB;AAAEC,MAAAA,KAAK,EAAE,YAAT;AAAuBS,MAAAA,QAAQ,EAAEZ,IAAI,CAAC,CAAD;AAArC,KAApB;AACD,GAJD;AAKH,CARD;AAUAV,MAAM,CAACuB,IAAP,CAAY,WAAZ,EAAyB,UAASnB,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9C,MAAIS,EAAE,GAAEX,GAAG,CAACY,MAAJ,CAAWD,EAAnB;AACA,MAAIS,UAAU,GAACpB,GAAG,CAACqB,IAAnB;AACA,MAAIlB,GAAG,GAAI,gCAAX;AACAL,EAAAA,EAAE,CAACM,KAAH,CAASD,GAAT,EAAc,CAACiB,UAAD,EAAaT,EAAb,CAAd,EAAgC,UAAUN,GAAV,EAAeC,IAAf,EAAqB;AACrD,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACTQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACS,YAAL,GAAoB,oBAAhC;AACC,GAHD;AAIAd,EAAAA,GAAG,CAACe,QAAJ,CAAa,mBAAb;AACH,CATD;AAWAM,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "C:\\workspace\\todo-list-server\\routes\\",
      "sourcesContent": [
        "var express = require('express');\r\nvar router = express.Router();\r\n\r\nvar db=require('../database');\r\n// another routes also appear here\r\n\r\n// this script to fetch data from MySQL databse table\r\nrouter.get('/title-list', function(req, res, next) {\r\n    var sql='SELECT * FROM listitem';\r\n    db.query(sql, function (err, data, fields) {\r\n    if (err) throw err;\r\n    res.render('title-list', { title: 'Title List', userData: data});\r\n  });\r\n});\r\n\r\nrouter.get('/delete/:id', function(req, res, next) {\r\n    var id= req.params.id;\r\n      var sql = 'DELETE FROM listitem WHERE id = ?';\r\n      db.query(sql, [id], function (err, data) {\r\n      if (err) throw err;\r\n      console.log(data.affectedRows + \" record(s) updated\");\r\n    });\r\n    res.redirect('/todos/title-list');\r\n    \r\n});\r\n\r\nrouter.get('/edit/:id', function(req, res, next) {\r\n    var UserId= req.params.id;\r\n    var sql=`SELECT * FROM listitem WHERE id=${UserId}`;\r\n    db.query(sql, function (err, data) {\r\n      if (err) throw err;\r\n     \r\n      res.render('todos', { title: 'Title List', editData: data[0]});\r\n    });\r\n});\r\n\r\nrouter.post('/edit/:id', function(req, res, next) {\r\n    var id= req.params.id;\r\n    var updateData=req.body;\r\n    var sql = `UPDATE users SET ? WHERE id= ?`;\r\n    db.query(sql, [updateData, id], function (err, data) {\r\n    if (err) throw err;\r\n    console.log(data.affectedRows + \" record(s) updated\");\r\n    });\r\n    res.redirect('/todos/title-list');\r\n});\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1597220467538
  },
  "{\"sourceRoot\":\"C:\\\\workspace\\\\todo-list-server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\workspace\\\\todo-list-server\",\"filename\":\"C:\\\\workspace\\\\todo-list-server\\\\database.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\workspace\\\\todo-list-server\",\"plugins\":[],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\workspace\\todo-list-server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\workspace\\todo-list-server",
      "filename": "C:\\workspace\\todo-list-server\\database.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\workspace\\todo-list-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\workspace\\todo-list-server\\database.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\workspace\\todo-list-server\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\workspace\\todo-list-server\\",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "var mysql = require('mysql');\n\nvar conn = mysql.createConnection({\n  host: 'localhost',\n  post: 3306,\n  user: 'root',\n  password: '4fkdgo!!',\n  database: 'todos_db'\n});\nconn.connect(function (err) {\n  if (err) throw err;\n  console.log('Database is connected successfully !');\n});\nmodule.exports = conn;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsImNvbm4iLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInBvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFFQSxJQUFJQyxJQUFJLEdBQUdGLEtBQUssQ0FBQ0csZ0JBQU4sQ0FBdUI7QUFDOUJDLEVBQUFBLElBQUksRUFBRSxXQUR3QjtBQUU5QkMsRUFBQUEsSUFBSSxFQUFFLElBRndCO0FBRzlCQyxFQUFBQSxJQUFJLEVBQUUsTUFId0I7QUFJOUJDLEVBQUFBLFFBQVEsRUFBRyxVQUptQjtBQUs5QkMsRUFBQUEsUUFBUSxFQUFHO0FBTG1CLENBQXZCLENBQVg7QUFRQU4sSUFBSSxDQUFDTyxPQUFMLENBQWEsVUFBU0MsR0FBVCxFQUFjO0FBQ3pCLE1BQUlBLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNDQUFaO0FBQ0QsQ0FIRDtBQUtBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLElBQWpCIiwic291cmNlUm9vdCI6IkM6XFx3b3Jrc3BhY2VcXHRvZG8tbGlzdC1zZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XHJcblxyXG52YXIgY29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbiAgICBwb3N0OiAzMzA2LFxyXG4gICAgdXNlcjogJ3Jvb3QnLFxyXG4gICAgcGFzc3dvcmQgOiAnNGZrZGdvISEnLFxyXG4gICAgZGF0YWJhc2UgOiAndG9kb3NfZGInXHJcbn0pO1xyXG5cclxuY29ubi5jb25uZWN0KGZ1bmN0aW9uKGVycikge1xyXG4gIGlmIChlcnIpIHRocm93IGVycjtcclxuICBjb25zb2xlLmxvZygnRGF0YWJhc2UgaXMgY29ubmVjdGVkIHN1Y2Nlc3NmdWxseSAhJyk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBjb25uOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "mysql",
        "require",
        "conn",
        "createConnection",
        "host",
        "post",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIC,IAAI,GAAGF,KAAK,CAACG,gBAAN,CAAuB;AAC9BC,EAAAA,IAAI,EAAE,WADwB;AAE9BC,EAAAA,IAAI,EAAE,IAFwB;AAG9BC,EAAAA,IAAI,EAAE,MAHwB;AAI9BC,EAAAA,QAAQ,EAAG,UAJmB;AAK9BC,EAAAA,QAAQ,EAAG;AALmB,CAAvB,CAAX;AAQAN,IAAI,CAACO,OAAL,CAAa,UAASC,GAAT,EAAc;AACzB,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD,CAHD;AAKAC,MAAM,CAACC,OAAP,GAAiBZ,IAAjB",
      "sourceRoot": "C:\\workspace\\todo-list-server\\",
      "sourcesContent": [
        "var mysql = require('mysql');\r\n\r\nvar conn = mysql.createConnection({\r\n    host: 'localhost',\r\n    post: 3306,\r\n    user: 'root',\r\n    password : '4fkdgo!!',\r\n    database : 'todos_db'\r\n});\r\n\r\nconn.connect(function(err) {\r\n  if (err) throw err;\r\n  console.log('Database is connected successfully !');\r\n});\r\n\r\nmodule.exports = conn;"
      ]
    },
    "sourceType": "module",
    "mtime": 1597220311580
  },
  "{\"sourceRoot\":\"C:\\\\workspace\\\\todo-list-server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\workspace\\\\todo-list-server\",\"filename\":\"C:\\\\workspace\\\\todo-list-server\\\\app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\workspace\\\\todo-list-server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\workspace\\todo-list-server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\workspace\\todo-list-server",
      "filename": "C:\\workspace\\todo-list-server\\app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\workspace\\todo-list-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\workspace\\todo-list-server\\app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\workspace\\todo-list-server\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\workspace\\todo-list-server\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _todos = _interopRequireDefault(require(\"./routes/todos\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar whitelist = ['http://localhost:3000', 'http://192.168.1.44:3000'];\nvar corsOptions = {\n  origin: function origin(_origin, callback) {\n    if (!_origin) return callback(null, true);\n\n    if (whitelist.indexOf(_origin) === -1) {\n      var msg = \"The CORS policy for this site does not \" + \"allow access from the specified Origin.\";\n      return callback(new Error(msg), false);\n    }\n\n    return callback(null, true);\n  }\n};\napp.use(_express[\"default\"].json());\napp.use((0, _cors[\"default\"])(corsOptions));\napp.use('/todos', _todos[\"default\"]);\napp.listen(5000, function () {\n  console.log(\"Server started on Part 5000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ3aGl0ZWxpc3QiLCJjb3JzT3B0aW9ucyIsIm9yaWdpbiIsImNhbGxiYWNrIiwiaW5kZXhPZiIsIm1zZyIsIkVycm9yIiwidXNlIiwiZXhwcmVzcyIsImpzb24iLCJ0b2Rvc1JvdXRlciIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFFQSxJQUFNQyxTQUFTLEdBQUcsQ0FBQyx1QkFBRCxFQUEwQiwwQkFBMUIsQ0FBbEI7QUFDQSxJQUFNQyxXQUFXLEdBQUc7QUFDaEJDLEVBQUFBLE1BQU0sRUFBRSxnQkFBVUEsT0FBVixFQUFrQkMsUUFBbEIsRUFBNEI7QUFDaEMsUUFBSSxDQUFDRCxPQUFMLEVBQWEsT0FBT0MsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQWY7O0FBQ2IsUUFBSUgsU0FBUyxDQUFDSSxPQUFWLENBQWtCRixPQUFsQixNQUE4QixDQUFDLENBQW5DLEVBQXNDO0FBQ3BDLFVBQUlHLEdBQUcsR0FDTCw0Q0FDQSx5Q0FGRjtBQUdBLGFBQU9GLFFBQVEsQ0FBQyxJQUFJRyxLQUFKLENBQVVELEdBQVYsQ0FBRCxFQUFpQixLQUFqQixDQUFmO0FBQ0Q7O0FBQ0QsV0FBT0YsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQWY7QUFDRDtBQVZhLENBQXBCO0FBYUFKLEdBQUcsQ0FBQ1EsR0FBSixDQUFRQyxvQkFBUUMsSUFBUixFQUFSO0FBQ0FWLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLHNCQUFLTixXQUFMLENBQVI7QUFDQUYsR0FBRyxDQUFDUSxHQUFKLENBQVEsUUFBUixFQUFrQkcsaUJBQWxCO0FBRUFYLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLElBQVgsRUFBaUIsWUFBTTtBQUNuQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNkJBQVo7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6IkM6XFx3b3Jrc3BhY2VcXHRvZG8tbGlzdC1zZXJ2ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcclxuaW1wb3J0IHRvZG9zUm91dGVyIGZyb20gJy4vcm91dGVzL3RvZG9zJ1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuY29uc3Qgd2hpdGVsaXN0ID0gWydodHRwOi8vbG9jYWxob3N0OjMwMDAnLCAnaHR0cDovLzE5Mi4xNjguMS40NDozMDAwJ11cclxuY29uc3QgY29yc09wdGlvbnMgPSB7XHJcbiAgICBvcmlnaW46IGZ1bmN0aW9uIChvcmlnaW4sIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgaWYgKCFvcmlnaW4pIHJldHVybiBjYWxsYmFjayhudWxsLCB0cnVlKTtcclxuICAgICAgICBpZiAod2hpdGVsaXN0LmluZGV4T2Yob3JpZ2luKSA9PT0gLTEpIHtcclxuICAgICAgICAgIHZhciBtc2cgPVxyXG4gICAgICAgICAgICBcIlRoZSBDT1JTIHBvbGljeSBmb3IgdGhpcyBzaXRlIGRvZXMgbm90IFwiICtcclxuICAgICAgICAgICAgXCJhbGxvdyBhY2Nlc3MgZnJvbSB0aGUgc3BlY2lmaWVkIE9yaWdpbi5cIjtcclxuICAgICAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IobXNnKSwgZmFsc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XHJcbiAgICAgIH0sXHJcbn1cclxuXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpXHJcbmFwcC51c2UoY29ycyhjb3JzT3B0aW9ucykpXHJcbmFwcC51c2UoJy90b2RvcycsIHRvZG9zUm91dGVyKTtcclxuXHJcbmFwcC5saXN0ZW4oNTAwMCwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJTZXJ2ZXIgc3RhcnRlZCBvbiBQYXJ0IDUwMDBcIik7XHJcbn0pXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "whitelist",
        "corsOptions",
        "origin",
        "callback",
        "indexOf",
        "msg",
        "Error",
        "use",
        "express",
        "json",
        "todosRouter",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEA,IAAMC,SAAS,GAAG,CAAC,uBAAD,EAA0B,0BAA1B,CAAlB;AACA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE,gBAAUA,OAAV,EAAkBC,QAAlB,EAA4B;AAChC,QAAI,CAACD,OAAL,EAAa,OAAOC,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;;AACb,QAAIH,SAAS,CAACI,OAAV,CAAkBF,OAAlB,MAA8B,CAAC,CAAnC,EAAsC;AACpC,UAAIG,GAAG,GACL,4CACA,yCAFF;AAGA,aAAOF,QAAQ,CAAC,IAAIG,KAAJ,CAAUD,GAAV,CAAD,EAAiB,KAAjB,CAAf;AACD;;AACD,WAAOF,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;AACD;AAVa,CAApB;AAaAJ,GAAG,CAACQ,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAV,GAAG,CAACQ,GAAJ,CAAQ,sBAAKN,WAAL,CAAR;AACAF,GAAG,CAACQ,GAAJ,CAAQ,QAAR,EAAkBG,iBAAlB;AAEAX,GAAG,CAACY,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,CAFD",
      "sourceRoot": "C:\\workspace\\todo-list-server\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport cors from 'cors';\r\nimport todosRouter from './routes/todos'\r\n\r\nconst app = express();\r\n\r\nconst whitelist = ['http://localhost:3000', 'http://192.168.1.44:3000']\r\nconst corsOptions = {\r\n    origin: function (origin, callback) {\r\n        if (!origin) return callback(null, true);\r\n        if (whitelist.indexOf(origin) === -1) {\r\n          var msg =\r\n            \"The CORS policy for this site does not \" +\r\n            \"allow access from the specified Origin.\";\r\n          return callback(new Error(msg), false);\r\n        }\r\n        return callback(null, true);\r\n      },\r\n}\r\n\r\napp.use(express.json())\r\napp.use(cors(corsOptions))\r\napp.use('/todos', todosRouter);\r\n\r\napp.listen(5000, () => {\r\n    console.log(\"Server started on Part 5000\");\r\n})\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597796827224
  },
  "{\"sourceRoot\":\"C:\\\\workspace\\\\todo-list-server\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\workspace\\\\todo-list-server\",\"filename\":\"C:\\\\workspace\\\\todo-list-server\\\\routes\\\\todos.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\workspace\\\\todo-list-server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\workspace\\todo-list-server\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\workspace\\todo-list-server",
      "filename": "C:\\workspace\\todo-list-server\\routes\\todos.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\workspace\\todo-list-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\workspace\\todo-list-server\\routes\\todos.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\workspace\\todo-list-server\\routes\\todos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\workspace\\todo-list-server\\routes\\",
        "sourceFileName": "todos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _database = _interopRequireDefault(require(\"../database\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router(); //라우터 레벨 미들웨어\n\n\n// another routes also appear here\n// this script to fetch data from MySQL databse table\nrouter.get('/', function (req, res, next) {\n  var sql = 'SELECT * FROM listitem';\n\n  _database[\"default\"].query(sql, function (err, data, fields) {\n    if (err) throw err;\n    res.send(data);\n  });\n});\nrouter.post('/insert', function (req, res, next) {\n  console.log(req.body);\n  var title = req.body.title;\n  var sql = 'INSERT INTO listitem (title) VALUES (?)';\n\n  _database[\"default\"].query(sql, [title], function (err, data) {\n    if (err) {\n      return res.send(err);\n    } else {\n      console.log(\"insert\");\n      return res.send(data);\n    }\n  });\n});\nrouter[\"delete\"]('/delete', function (req, res, next) {\n  var id = req.body.id; //console.log(req.body.id);\n\n  var sql = 'DELETE FROM listitem WHERE id = ?';\n\n  _database[\"default\"].query(sql, [id], function (err, data) {\n    if (err) {\n      return res.send(err);\n    } else {\n      console.log(\"delete\");\n      return res.send({\n        id: id\n      });\n    }\n  });\n});\n/*router.get('/edit/:id', function(req, res, next) {\r\n    const UserId= req.params.id;\r\n    const sql=`SELECT * FROM listitem WHERE id=${UserId}`;\r\n    db.query(sql, function (err, data) {\r\n      if (err) throw err;\r\n      res.render('todos', { title: 'Title List', editData: data[0]});\r\n    });\r\n});*/\n\nrouter.post('/edit', function (req, res, next) {\n  var id = req.body.id;\n  var title = req.body.title;\n  var contents = req.body.contents;\n  var sql = \"UPDATE listitem SET title=?,contents=? WHERE id= ?\";\n\n  _database[\"default\"].query(sql, [title, contents, id], function (err, data) {\n    if (err) {\n      return res.send(\"fail\");\n    } else {\n      console.log(\"edit\");\n      return res.send(\"success\");\n    }\n  });\n});\nrouter.post('/Update', function (req, res, next) {\n  var id = req.body.id;\n  var checked = req.body.checked;\n  console.log(checked);\n  var sql = \"UPDATE listitem SET checked = ? WHERE id= ?\";\n\n  _database[\"default\"].query(sql, [checked, id], function (err, data) {\n    if (err) {\n      return res.send(err);\n    } else {\n      console.log(\"Update\");\n      return res.send({\n        id: id,\n        checked: checked\n      });\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG9zLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic3FsIiwiZGIiLCJxdWVyeSIsImVyciIsImRhdGEiLCJmaWVsZHMiLCJzZW5kIiwicG9zdCIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwidGl0bGUiLCJpZCIsImNvbnRlbnRzIiwiY2hlY2tlZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBR0E7Ozs7QUFGQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWYsQyxDQUFpQzs7O0FBR2pDO0FBRUE7QUFDQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3JDLE1BQU1DLEdBQUcsR0FBQyx3QkFBVjs7QUFDQUMsdUJBQUdDLEtBQUgsQ0FBU0YsR0FBVCxFQUFjLFVBQVVHLEdBQVYsRUFBZUMsSUFBZixFQUFxQkMsTUFBckIsRUFBNkI7QUFDM0MsUUFBSUYsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVEwsSUFBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVNGLElBQVQ7QUFDRCxHQUhDO0FBSUgsQ0FORDtBQVFBWCxNQUFNLENBQUNjLElBQVAsQ0FBWSxTQUFaLEVBQXVCLFVBQVNWLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDOUNTLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWixHQUFHLENBQUNhLElBQWhCO0FBQ0EsTUFBTUMsS0FBSyxHQUFFZCxHQUFHLENBQUNhLElBQUosQ0FBU0MsS0FBdEI7QUFDQSxNQUFNWCxHQUFHLEdBQUMseUNBQVY7O0FBQ0NDLHVCQUFHQyxLQUFILENBQVNGLEdBQVQsRUFBYyxDQUFDVyxLQUFELENBQWQsRUFBdUIsVUFBVVIsR0FBVixFQUFlQyxJQUFmLEVBQXFCO0FBQzFDLFFBQUdELEdBQUgsRUFBUTtBQUNQLGFBQU9MLEdBQUcsQ0FBQ1EsSUFBSixDQUFTSCxHQUFULENBQVA7QUFDQSxLQUZELE1BR0s7QUFDRkssTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtBQUNDLGFBQU9YLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRixJQUFULENBQVA7QUFDSDtBQUNELEdBUkY7QUFTRixDQWJEO0FBZUFYLE1BQU0sVUFBTixDQUFjLFNBQWQsRUFBeUIsVUFBU0ksR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUM5QyxNQUFNYSxFQUFFLEdBQUVmLEdBQUcsQ0FBQ2EsSUFBSixDQUFTRSxFQUFuQixDQUQ4QyxDQUU5Qzs7QUFDQSxNQUFNWixHQUFHLEdBQUcsbUNBQVo7O0FBQ0FDLHVCQUFHQyxLQUFILENBQVNGLEdBQVQsRUFBYyxDQUFDWSxFQUFELENBQWQsRUFBb0IsVUFBVVQsR0FBVixFQUFlQyxJQUFmLEVBQXFCO0FBQ3ZDLFFBQUdELEdBQUgsRUFBUTtBQUNOLGFBQU9MLEdBQUcsQ0FBQ1EsSUFBSixDQUFTSCxHQUFULENBQVA7QUFDQSxLQUZGLE1BR007QUFDSkssTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtBQUNBLGFBQU9YLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUVNLFFBQUFBLEVBQUUsRUFBRkE7QUFBRixPQUFULENBQVA7QUFDQTtBQUNILEdBUkQ7QUFVSCxDQWREO0FBZ0JBOzs7Ozs7Ozs7QUFTQW5CLE1BQU0sQ0FBQ2MsSUFBUCxDQUFZLE9BQVosRUFBcUIsVUFBU1YsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUMxQyxNQUFNYSxFQUFFLEdBQUdmLEdBQUcsQ0FBQ2EsSUFBSixDQUFTRSxFQUFwQjtBQUNBLE1BQU1ELEtBQUssR0FBRWQsR0FBRyxDQUFDYSxJQUFKLENBQVNDLEtBQXRCO0FBQ0EsTUFBTUUsUUFBUSxHQUFDaEIsR0FBRyxDQUFDYSxJQUFKLENBQVNHLFFBQXhCO0FBQ0EsTUFBTWIsR0FBRyx1REFBVDs7QUFDQUMsdUJBQUdDLEtBQUgsQ0FBU0YsR0FBVCxFQUFjLENBQUNXLEtBQUQsRUFBUUUsUUFBUixFQUFrQkQsRUFBbEIsQ0FBZCxFQUFxQyxVQUFVVCxHQUFWLEVBQWVDLElBQWYsRUFBcUI7QUFDeEQsUUFBR0QsR0FBSCxFQUFRO0FBQ04sYUFBT0wsR0FBRyxDQUFDUSxJQUFKLENBQVMsTUFBVCxDQUFQO0FBQ0EsS0FGRixNQUdNO0FBQ0pFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE1BQVo7QUFDQSxhQUFPWCxHQUFHLENBQUNRLElBQUosQ0FBUyxTQUFULENBQVA7QUFDQTtBQUNELEdBUkg7QUFVSCxDQWZEO0FBaUJBYixNQUFNLENBQUNjLElBQVAsQ0FBWSxTQUFaLEVBQXVCLFVBQVNWLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDOUMsTUFBTWEsRUFBRSxHQUFHZixHQUFHLENBQUNhLElBQUosQ0FBU0UsRUFBcEI7QUFDQSxNQUFNRSxPQUFPLEdBQUVqQixHQUFHLENBQUNhLElBQUosQ0FBU0ksT0FBeEI7QUFDQU4sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlLLE9BQVo7QUFDQSxNQUFNZCxHQUFHLGdEQUFUOztBQUNBQyx1QkFBR0MsS0FBSCxDQUFTRixHQUFULEVBQWMsQ0FBQ2MsT0FBRCxFQUFVRixFQUFWLENBQWQsRUFBNkIsVUFBVVQsR0FBVixFQUFlQyxJQUFmLEVBQXFCO0FBQ2hELFFBQUdELEdBQUgsRUFBUTtBQUNOLGFBQU9MLEdBQUcsQ0FBQ1EsSUFBSixDQUFTSCxHQUFULENBQVA7QUFDQSxLQUZGLE1BR007QUFDSkssTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtBQUNBLGFBQU9YLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUVNLFFBQUFBLEVBQUUsRUFBRkEsRUFBRjtBQUFNRSxRQUFBQSxPQUFPLEVBQVBBO0FBQU4sT0FBVCxDQUFQO0FBQ0E7QUFDRCxHQVJIO0FBU0QsQ0FkRDtBQWdCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCdkIsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXHdvcmtzcGFjZVxcdG9kby1saXN0LXNlcnZlclxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTsgLy/rnbzsmrDthLAg66CI67KoIOuvuOuTpOybqOyWtFxyXG5cclxuaW1wb3J0IGRiIGZyb20gJy4uL2RhdGFiYXNlJztcclxuLy8gYW5vdGhlciByb3V0ZXMgYWxzbyBhcHBlYXIgaGVyZVxyXG5cclxuLy8gdGhpcyBzY3JpcHQgdG8gZmV0Y2ggZGF0YSBmcm9tIE15U1FMIGRhdGFic2UgdGFibGVcclxucm91dGVyLmdldCgnLycsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICBjb25zdCBzcWw9J1NFTEVDVCAqIEZST00gbGlzdGl0ZW0nO1xyXG4gICAgZGIucXVlcnkoc3FsLCBmdW5jdGlvbiAoZXJyLCBkYXRhLCBmaWVsZHMpIHtcclxuICAgIGlmIChlcnIpIHRocm93IGVycjtcclxuICAgIHJlcy5zZW5kKGRhdGEpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbnJvdXRlci5wb3N0KCcvaW5zZXJ0JywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICBjb25zb2xlLmxvZyhyZXEuYm9keSlcclxuICBjb25zdCB0aXRsZT0gcmVxLmJvZHkudGl0bGU7XHJcbiAgY29uc3Qgc3FsPSdJTlNFUlQgSU5UTyBsaXN0aXRlbSAodGl0bGUpIFZBTFVFUyAoPyknO1xyXG4gICBkYi5xdWVyeShzcWwsIFt0aXRsZV0sIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcclxuICAgICBpZihlcnIpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zZW5kKGVycilcclxuICAgICB9XHJcbiAgICAgZWxzZSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJpbnNlcnRcIilcclxuICAgICAgICAgcmV0dXJuIHJlcy5zZW5kKGRhdGEpXHJcbiAgICAgfVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxucm91dGVyLmRlbGV0ZSgnL2RlbGV0ZScsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICBjb25zdCBpZD0gcmVxLmJvZHkuaWQ7XHJcbiAgICAvL2NvbnNvbGUubG9nKHJlcS5ib2R5LmlkKTtcclxuICAgIGNvbnN0IHNxbCA9ICdERUxFVEUgRlJPTSBsaXN0aXRlbSBXSEVSRSBpZCA9ID8nO1xyXG4gICAgZGIucXVlcnkoc3FsLCBbaWRdLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XHJcbiAgICAgIGlmKGVycikge1xyXG4gICAgICAgIHJldHVybiByZXMuc2VuZChlcnIpXHJcbiAgICAgICB9XHJcbiAgICAgICBlbHNlIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImRlbGV0ZVwiKVxyXG4gICAgICAgIHJldHVybiByZXMuc2VuZCh7IGlkIH0pXHJcbiAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIFxyXG59KTtcclxuXHJcbi8qcm91dGVyLmdldCgnL2VkaXQvOmlkJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IFVzZXJJZD0gcmVxLnBhcmFtcy5pZDtcclxuICAgIGNvbnN0IHNxbD1gU0VMRUNUICogRlJPTSBsaXN0aXRlbSBXSEVSRSBpZD0ke1VzZXJJZH1gO1xyXG4gICAgZGIucXVlcnkoc3FsLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XHJcbiAgICAgIGlmIChlcnIpIHRocm93IGVycjtcclxuICAgICAgcmVzLnJlbmRlcigndG9kb3MnLCB7IHRpdGxlOiAnVGl0bGUgTGlzdCcsIGVkaXREYXRhOiBkYXRhWzBdfSk7XHJcbiAgICB9KTtcclxufSk7Ki9cclxuXHJcbnJvdXRlci5wb3N0KCcvZWRpdCcsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICBjb25zdCBpZCA9IHJlcS5ib2R5LmlkO1xyXG4gICAgY29uc3QgdGl0bGU9IHJlcS5ib2R5LnRpdGxlO1xyXG4gICAgY29uc3QgY29udGVudHM9cmVxLmJvZHkuY29udGVudHM7XHJcbiAgICBjb25zdCBzcWwgPSBgVVBEQVRFIGxpc3RpdGVtIFNFVCB0aXRsZT0/LGNvbnRlbnRzPT8gV0hFUkUgaWQ9ID9gO1xyXG4gICAgZGIucXVlcnkoc3FsLCBbdGl0bGUsIGNvbnRlbnRzLCBpZF0sIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcclxuICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zZW5kKFwiZmFpbFwiKVxyXG4gICAgICAgfVxyXG4gICAgICAgZWxzZSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJlZGl0XCIpXHJcbiAgICAgICAgcmV0dXJuIHJlcy5zZW5kKFwic3VjY2Vzc1wiKVxyXG4gICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgXHJcbn0pO1xyXG5cclxucm91dGVyLnBvc3QoJy9VcGRhdGUnLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xyXG4gIGNvbnN0IGlkID0gcmVxLmJvZHkuaWQ7XHJcbiAgY29uc3QgY2hlY2tlZD0gcmVxLmJvZHkuY2hlY2tlZDtcclxuICBjb25zb2xlLmxvZyhjaGVja2VkKTtcclxuICBjb25zdCBzcWwgPSBgVVBEQVRFIGxpc3RpdGVtIFNFVCBjaGVja2VkID0gPyBXSEVSRSBpZD0gP2A7XHJcbiAgZGIucXVlcnkoc3FsLCBbY2hlY2tlZCwgaWRdLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XHJcbiAgICBpZihlcnIpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zZW5kKGVycilcclxuICAgICB9XHJcbiAgICAgZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiVXBkYXRlXCIpXHJcbiAgICAgIHJldHVybiByZXMuc2VuZCh7IGlkLCBjaGVja2VkIH0pXHJcbiAgICAgfVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "todos.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "sql",
        "db",
        "query",
        "err",
        "data",
        "fields",
        "send",
        "post",
        "console",
        "log",
        "body",
        "title",
        "id",
        "contents",
        "checked",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAAiC;;;AAGjC;AAEA;AACAF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACrC,MAAMC,GAAG,GAAC,wBAAV;;AACAC,uBAAGC,KAAH,CAASF,GAAT,EAAc,UAAUG,GAAV,EAAeC,IAAf,EAAqBC,MAArB,EAA6B;AAC3C,QAAIF,GAAJ,EAAS,MAAMA,GAAN;AACTL,IAAAA,GAAG,CAACQ,IAAJ,CAASF,IAAT;AACD,GAHC;AAIH,CAND;AAQAX,MAAM,CAACc,IAAP,CAAY,SAAZ,EAAuB,UAASV,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9CS,EAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACa,IAAhB;AACA,MAAMC,KAAK,GAAEd,GAAG,CAACa,IAAJ,CAASC,KAAtB;AACA,MAAMX,GAAG,GAAC,yCAAV;;AACCC,uBAAGC,KAAH,CAASF,GAAT,EAAc,CAACW,KAAD,CAAd,EAAuB,UAAUR,GAAV,EAAeC,IAAf,EAAqB;AAC1C,QAAGD,GAAH,EAAQ;AACP,aAAOL,GAAG,CAACQ,IAAJ,CAASH,GAAT,CAAP;AACA,KAFD,MAGK;AACFK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACC,aAAOX,GAAG,CAACQ,IAAJ,CAASF,IAAT,CAAP;AACH;AACD,GARF;AASF,CAbD;AAeAX,MAAM,UAAN,CAAc,SAAd,EAAyB,UAASI,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9C,MAAMa,EAAE,GAAEf,GAAG,CAACa,IAAJ,CAASE,EAAnB,CAD8C,CAE9C;;AACA,MAAMZ,GAAG,GAAG,mCAAZ;;AACAC,uBAAGC,KAAH,CAASF,GAAT,EAAc,CAACY,EAAD,CAAd,EAAoB,UAAUT,GAAV,EAAeC,IAAf,EAAqB;AACvC,QAAGD,GAAH,EAAQ;AACN,aAAOL,GAAG,CAACQ,IAAJ,CAASH,GAAT,CAAP;AACA,KAFF,MAGM;AACJK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAOX,GAAG,CAACQ,IAAJ,CAAS;AAAEM,QAAAA,EAAE,EAAFA;AAAF,OAAT,CAAP;AACA;AACH,GARD;AAUH,CAdD;AAgBA;;;;;;;;;AASAnB,MAAM,CAACc,IAAP,CAAY,OAAZ,EAAqB,UAASV,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC1C,MAAMa,EAAE,GAAGf,GAAG,CAACa,IAAJ,CAASE,EAApB;AACA,MAAMD,KAAK,GAAEd,GAAG,CAACa,IAAJ,CAASC,KAAtB;AACA,MAAME,QAAQ,GAAChB,GAAG,CAACa,IAAJ,CAASG,QAAxB;AACA,MAAMb,GAAG,uDAAT;;AACAC,uBAAGC,KAAH,CAASF,GAAT,EAAc,CAACW,KAAD,EAAQE,QAAR,EAAkBD,EAAlB,CAAd,EAAqC,UAAUT,GAAV,EAAeC,IAAf,EAAqB;AACxD,QAAGD,GAAH,EAAQ;AACN,aAAOL,GAAG,CAACQ,IAAJ,CAAS,MAAT,CAAP;AACA,KAFF,MAGM;AACJE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAOX,GAAG,CAACQ,IAAJ,CAAS,SAAT,CAAP;AACA;AACD,GARH;AAUH,CAfD;AAiBAb,MAAM,CAACc,IAAP,CAAY,SAAZ,EAAuB,UAASV,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9C,MAAMa,EAAE,GAAGf,GAAG,CAACa,IAAJ,CAASE,EAApB;AACA,MAAME,OAAO,GAAEjB,GAAG,CAACa,IAAJ,CAASI,OAAxB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACA,MAAMd,GAAG,gDAAT;;AACAC,uBAAGC,KAAH,CAASF,GAAT,EAAc,CAACc,OAAD,EAAUF,EAAV,CAAd,EAA6B,UAAUT,GAAV,EAAeC,IAAf,EAAqB;AAChD,QAAGD,GAAH,EAAQ;AACN,aAAOL,GAAG,CAACQ,IAAJ,CAASH,GAAT,CAAP;AACA,KAFF,MAGM;AACJK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAOX,GAAG,CAACQ,IAAJ,CAAS;AAAEM,QAAAA,EAAE,EAAFA,EAAF;AAAME,QAAAA,OAAO,EAAPA;AAAN,OAAT,CAAP;AACA;AACD,GARH;AASD,CAdD;AAgBAC,MAAM,CAACC,OAAP,GAAiBvB,MAAjB",
      "sourceRoot": "C:\\workspace\\todo-list-server\\routes\\",
      "sourcesContent": [
        "import express from 'express';\r\nconst router = express.Router(); //라우터 레벨 미들웨어\r\n\r\nimport db from '../database';\r\n// another routes also appear here\r\n\r\n// this script to fetch data from MySQL databse table\r\nrouter.get('/', function(req, res, next) {\r\n    const sql='SELECT * FROM listitem';\r\n    db.query(sql, function (err, data, fields) {\r\n    if (err) throw err;\r\n    res.send(data);\r\n  });\r\n});\r\n\r\nrouter.post('/insert', function(req, res, next) {\r\n  console.log(req.body)\r\n  const title= req.body.title;\r\n  const sql='INSERT INTO listitem (title) VALUES (?)';\r\n   db.query(sql, [title], function (err, data) {\r\n     if(err) {\r\n      return res.send(err)\r\n     }\r\n     else {\r\n        console.log(\"insert\")\r\n         return res.send(data)\r\n     }\r\n    });\r\n});\r\n\r\nrouter.delete('/delete', function(req, res, next) {\r\n    const id= req.body.id;\r\n    //console.log(req.body.id);\r\n    const sql = 'DELETE FROM listitem WHERE id = ?';\r\n    db.query(sql, [id], function (err, data) {\r\n      if(err) {\r\n        return res.send(err)\r\n       }\r\n       else {\r\n        console.log(\"delete\")\r\n        return res.send({ id })\r\n       }\r\n    });\r\n    \r\n});\r\n\r\n/*router.get('/edit/:id', function(req, res, next) {\r\n    const UserId= req.params.id;\r\n    const sql=`SELECT * FROM listitem WHERE id=${UserId}`;\r\n    db.query(sql, function (err, data) {\r\n      if (err) throw err;\r\n      res.render('todos', { title: 'Title List', editData: data[0]});\r\n    });\r\n});*/\r\n\r\nrouter.post('/edit', function(req, res, next) {\r\n    const id = req.body.id;\r\n    const title= req.body.title;\r\n    const contents=req.body.contents;\r\n    const sql = `UPDATE listitem SET title=?,contents=? WHERE id= ?`;\r\n    db.query(sql, [title, contents, id], function (err, data) {\r\n      if(err) {\r\n        return res.send(\"fail\")\r\n       }\r\n       else {\r\n        console.log(\"edit\")\r\n        return res.send(\"success\")\r\n       }\r\n      });\r\n      \r\n});\r\n\r\nrouter.post('/Update', function(req, res, next) {\r\n  const id = req.body.id;\r\n  const checked= req.body.checked;\r\n  console.log(checked);\r\n  const sql = `UPDATE listitem SET checked = ? WHERE id= ?`;\r\n  db.query(sql, [checked, id], function (err, data) {\r\n    if(err) {\r\n      return res.send(err)\r\n     }\r\n     else {\r\n      console.log(\"Update\")\r\n      return res.send({ id, checked })\r\n     }\r\n    });\r\n});\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1597813898181
  },
  "{\"sourceRoot\":\"C:\\\\workspace\\\\todo-list-server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\workspace\\\\todo-list-server\",\"filename\":\"C:\\\\workspace\\\\todo-list-server\\\\database.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\workspace\\\\todo-list-server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\workspace\\todo-list-server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\workspace\\todo-list-server",
      "filename": "C:\\workspace\\todo-list-server\\database.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\workspace\\todo-list-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\workspace\\todo-list-server\\database.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\workspace\\todo-list-server\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\workspace\\todo-list-server\\",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar conn = _mysql[\"default\"].createConnection({\n  host: 'localhost',\n  post: 3306,\n  user: 'root',\n  password: '4fkdgo!!',\n  database: 'todos_db'\n});\n\nconn.connect(function (err) {\n  if (err) throw err;\n  console.log('Database is connected successfully !');\n});\nmodule.exports = conn;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbImNvbm4iLCJteXNxbCIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwicG9zdCIsInVzZXIiLCJwYXNzd29yZCIsImRhdGFiYXNlIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUEsSUFBTUEsSUFBSSxHQUFHQyxrQkFBTUMsZ0JBQU4sQ0FBdUI7QUFDaENDLEVBQUFBLElBQUksRUFBRSxXQUQwQjtBQUVoQ0MsRUFBQUEsSUFBSSxFQUFFLElBRjBCO0FBR2hDQyxFQUFBQSxJQUFJLEVBQUUsTUFIMEI7QUFJaENDLEVBQUFBLFFBQVEsRUFBRyxVQUpxQjtBQUtoQ0MsRUFBQUEsUUFBUSxFQUFHO0FBTHFCLENBQXZCLENBQWI7O0FBUUFQLElBQUksQ0FBQ1EsT0FBTCxDQUFhLFVBQVNDLEdBQVQsRUFBYztBQUN6QixNQUFJQSxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNUQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQ0FBWjtBQUNELENBSEQ7QUFLQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixJQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcd29ya3NwYWNlXFx0b2RvLWxpc3Qtc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwnO1xyXG5cclxuY29uc3QgY29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbiAgICBwb3N0OiAzMzA2LFxyXG4gICAgdXNlcjogJ3Jvb3QnLFxyXG4gICAgcGFzc3dvcmQgOiAnNGZrZGdvISEnLFxyXG4gICAgZGF0YWJhc2UgOiAndG9kb3NfZGInXHJcbn0pO1xyXG5cclxuY29ubi5jb25uZWN0KGZ1bmN0aW9uKGVycikge1xyXG4gIGlmIChlcnIpIHRocm93IGVycjtcclxuICBjb25zb2xlLmxvZygnRGF0YWJhc2UgaXMgY29ubmVjdGVkIHN1Y2Nlc3NmdWxseSAhJyk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBjb25uOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "conn",
        "mysql",
        "createConnection",
        "host",
        "post",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AAEA,IAAMA,IAAI,GAAGC,kBAAMC,gBAAN,CAAuB;AAChCC,EAAAA,IAAI,EAAE,WAD0B;AAEhCC,EAAAA,IAAI,EAAE,IAF0B;AAGhCC,EAAAA,IAAI,EAAE,MAH0B;AAIhCC,EAAAA,QAAQ,EAAG,UAJqB;AAKhCC,EAAAA,QAAQ,EAAG;AALqB,CAAvB,CAAb;;AAQAP,IAAI,CAACQ,OAAL,CAAa,UAASC,GAAT,EAAc;AACzB,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD,CAHD;AAKAC,MAAM,CAACC,OAAP,GAAiBb,IAAjB",
      "sourceRoot": "C:\\workspace\\todo-list-server\\",
      "sourcesContent": [
        "import mysql from 'mysql';\r\n\r\nconst conn = mysql.createConnection({\r\n    host: 'localhost',\r\n    post: 3306,\r\n    user: 'root',\r\n    password : '4fkdgo!!',\r\n    database : 'todos_db'\r\n});\r\n\r\nconn.connect(function(err) {\r\n  if (err) throw err;\r\n  console.log('Database is connected successfully !');\r\n});\r\n\r\nmodule.exports = conn;"
      ]
    },
    "sourceType": "script",
    "mtime": 1597222358803
  }
}